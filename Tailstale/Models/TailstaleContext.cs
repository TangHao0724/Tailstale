// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Tailstale.Models;

public partial class TailstaleContext : DbContext
{
    public TailstaleContext(DbContextOptions<TailstaleContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Appointment> Appointments { get; set; }

    public virtual DbSet<Beautician> Beautician { get; set; }

    public virtual DbSet<Booking> Bookings { get; set; }

    public virtual DbSet<BookingDetail> BookingDetails { get; set; }

    public virtual DbSet<Business_hour> Business_hour { get; set; }

    public virtual DbSet<CheckinDetail> CheckinDetails { get; set; }

    public virtual DbSet<Consumption_Record> Consumption_Record { get; set; }

    public virtual DbSet<Message> Messages { get; set; }

    public virtual DbSet<PaymentInfo> PaymentInfos { get; set; }

    public virtual DbSet<Reserve> Reserve { get; set; }

    public virtual DbSet<Review> Reviews { get; set; }

    public virtual DbSet<Room> Rooms { get; set; }

    public virtual DbSet<Service> Service { get; set; }

    public virtual DbSet<article> articles { get; set; }

    public virtual DbSet<biological_test> biological_tests { get; set; }

    public virtual DbSet<business> businesses { get; set; }

    public virtual DbSet<business_img> business_imgs { get; set; }

    public virtual DbSet<business_img_type> business_img_types { get; set; }

    public virtual DbSet<business_type> business_types { get; set; }

    public virtual DbSet<daily_outpatient_clinic_schedule> daily_outpatient_clinic_schedules { get; set; }

    public virtual DbSet<department> departments { get; set; }

    public virtual DbSet<dosage_form> dosage_forms { get; set; }

    public virtual DbSet<frequency> frequencies { get; set; }

    public virtual DbSet<hosp_history> hosp_histories { get; set; }

    public virtual DbSet<image_file> image_files { get; set; }

    public virtual DbSet<keeper> keepers { get; set; }

    public virtual DbSet<keeper_img> keeper_imgs { get; set; }

    public virtual DbSet<keeper_img_type> keeper_img_types { get; set; }

    public virtual DbSet<medical_imaging> medical_imagings { get; set; }

    public virtual DbSet<medical_record> medical_records { get; set; }

    public virtual DbSet<medicine> medicines { get; set; }

    public virtual DbSet<medicine_order_record> medicine_order_records { get; set; }

    public virtual DbSet<medicine_order_status> medicine_order_statuses { get; set; }

    public virtual DbSet<member_status> member_statuses { get; set; }

    public virtual DbSet<memo> memos { get; set; }

    public virtual DbSet<nursing_record> nursing_records { get; set; }

    public virtual DbSet<order_status> order_statuses { get; set; }

    public virtual DbSet<outpatient_clinic> outpatient_clinics { get; set; }

    public virtual DbSet<outpatient_clinic_timeslot> outpatient_clinic_timeslots { get; set; }

    public virtual DbSet<person_tag> person_tags { get; set; }

    public virtual DbSet<pet> pets { get; set; }

    public virtual DbSet<pet_type> pet_types { get; set; }

    public virtual DbSet<record_type> record_types { get; set; }

    public virtual DbSet<roomType> roomTypes { get; set; }

    public virtual DbSet<speciman> specimen { get; set; }

    public virtual DbSet<surgery> surgeries { get; set; }

    public virtual DbSet<tag> tags { get; set; }

    public virtual DbSet<using_person_tag> using_person_tags { get; set; }

    public virtual DbSet<using_tag> using_tags { get; set; }

    public virtual DbSet<vet_information> vet_informations { get; set; }

    public virtual DbSet<vital_sign_record> vital_sign_records { get; set; }

    public virtual DbSet<ward> wards { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Appointment>(entity =>
        {
            entity.HasKey(e => e.Appointment_ID).HasName("PK__Appointm__FD01B5038A074F27");

            entity.ToTable("Appointment");

            entity.Property(e => e.registration_time)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Appointment_statusNavigation).WithMany(p => p.Appointments)
                .HasForeignKey(d => d.Appointment_status)
                .HasConstraintName("FK__Appointme__Appoi__70DDC3D8");

            entity.HasOne(d => d.daily_outpatient_clinic_schedule).WithMany(p => p.Appointments)
                .HasForeignKey(d => d.daily_outpatient_clinic_schedule_ID)
                .HasConstraintName("FK__Appointme__daily__6FE99F9F");

            entity.HasOne(d => d.keeper).WithMany(p => p.Appointments)
                .HasForeignKey(d => d.keeper_ID)
                .HasConstraintName("FK__Appointme__keepe__6E01572D");

            entity.HasOne(d => d.pet).WithMany(p => p.Appointments)
                .HasForeignKey(d => d.pet_ID)
                .HasConstraintName("FK__Appointme__pet_I__6D0D32F4");
        });

        modelBuilder.Entity<Beautician>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__Beautici__3213E83F721E07F5");

            entity.ToTable("Beautician");

            entity.Property(e => e.Highest_license).HasMaxLength(255);
            entity.Property(e => e.Remark).HasMaxLength(300);
            entity.Property(e => e.gender)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.name)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.phone)
                .IsRequired()
                .HasMaxLength(16);
            entity.Property(e => e.photo).HasMaxLength(255);

            entity.HasOne(d => d.business).WithMany(p => p.Beauticians)
                .HasForeignKey(d => d.business_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Beauticia__busin__59C55456");
        });

        modelBuilder.Entity<Booking>(entity =>
        {
            entity.HasKey(e => e.bookingID).HasName("PK__Booking__C6D03BED969C9B10");

            entity.ToTable("Booking");

            entity.Property(e => e.bookingDate).HasColumnType("datetime");
            entity.Property(e => e.checkinDate).HasColumnType("datetime");
            entity.Property(e => e.checkoutDate).HasColumnType("datetime");

            entity.HasOne(d => d.bookingStatusNavigation).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.bookingStatus)
                .HasConstraintName("FK__Booking__booking__395884C4");

            entity.HasOne(d => d.hotel).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.hotelID)
                .HasConstraintName("FK__Booking__hotelID__37703C52");

            entity.HasOne(d => d.keeper).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.keeper_ID)
                .HasConstraintName("FK__Booking__keeper___3864608B");
        });

        modelBuilder.Entity<BookingDetail>(entity =>
        {
            entity.HasKey(e => e.bdID).HasName("PK__BookingD__4E75390FA7FD91F5");

            entity.HasOne(d => d.booking).WithMany(p => p.BookingDetails)
                .HasForeignKey(d => d.bookingID)
                .HasConstraintName("FK__BookingDe__booki__3B40CD36");

            entity.HasOne(d => d.room).WithMany(p => p.BookingDetails)
                .HasForeignKey(d => d.roomID)
                .HasConstraintName("FK__BookingDe__roomI__3A4CA8FD");
        });

        modelBuilder.Entity<Business_hour>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__Business__3213E83F4E64B550");

            entity.ToTable("Business_hour");

            entity.Property(e => e.close_time).HasDefaultValue(new TimeOnly(19, 0, 0));
            entity.Property(e => e.open_time).HasDefaultValue(new TimeOnly(10, 0, 0));
            entity.Property(e => e.people_limit).HasDefaultValue(2);

            entity.HasOne(d => d.business).WithMany(p => p.Business_hour)
                .HasForeignKey(d => d.business_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Business___busin__4E53A1AA");
        });

        modelBuilder.Entity<CheckinDetail>(entity =>
        {
            entity.HasKey(e => e.checkinID).HasName("PK__CheckinD__CF1A6A410F95D3DE");

            entity.HasOne(d => d.booking).WithMany(p => p.CheckinDetails)
                .HasForeignKey(d => d.bookingID)
                .HasConstraintName("FK__CheckinDe__booki__40058253");

            entity.HasOne(d => d.pet).WithMany(p => p.CheckinDetails)
                .HasForeignKey(d => d.pet_ID)
                .HasConstraintName("FK__CheckinDe__pet_I__41EDCAC5");

            entity.HasOne(d => d.room).WithMany(p => p.CheckinDetails)
                .HasForeignKey(d => d.roomID)
                .HasConstraintName("FK__CheckinDe__roomI__40F9A68C");
        });

        modelBuilder.Entity<Consumption_Record>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__Consumpt__3213E83FD6DAB195");

            entity.ToTable("Consumption_Record");

            entity.Property(e => e.after_photo).HasMaxLength(255);
            entity.Property(e => e.before_photo).HasMaxLength(255);
            entity.Property(e => e.end_time)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.pet_name)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.pet_weight).HasColumnType("decimal(4, 1)");
            entity.Property(e => e.service_name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.time).HasColumnType("datetime");

            entity.HasOne(d => d.beautician).WithMany(p => p.Consumption_Record)
                .HasForeignKey(d => d.beautician_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Consumpti__beaut__5F7E2DAC");

            entity.HasOne(d => d.business).WithMany(p => p.Consumption_Record)
                .HasForeignKey(d => d.business_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Consumpti__busin__5CA1C101");

            entity.HasOne(d => d.keeper).WithMany(p => p.Consumption_Record)
                .HasForeignKey(d => d.keeper_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Consumpti__keepe__5E8A0973");
        });

        modelBuilder.Entity<Message>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Message__3214EC27B62DDEA0");

            entity.ToTable("Message");

            entity.Property(e => e.content).HasMaxLength(256);
            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.FK_Target).WithMany(p => p.MessageFK_Targets)
                .HasForeignKey(d => d.FK_Target_ID)
                .HasConstraintName("FK__Message__FK_Targ__76619304");

            entity.HasOne(d => d.FK_User).WithMany(p => p.MessageFK_Users)
                .HasForeignKey(d => d.FK_User_ID)
                .HasConstraintName("FK__Message__FK_User__756D6ECB");
        });

        modelBuilder.Entity<PaymentInfo>(entity =>
        {
            entity.HasKey(e => e.paymentID).HasName("PK__PaymentI__A0D9EFA615D716A8");

            entity.ToTable("PaymentInfo");

            entity.Property(e => e.cardholderName).HasMaxLength(20);
            entity.Property(e => e.paymentStatus)
                .HasMaxLength(1)
                .IsFixedLength();
            entity.Property(e => e.paymentTimestamp).HasColumnType("datetime");

            entity.HasOne(d => d.booking).WithMany(p => p.PaymentInfos)
                .HasForeignKey(d => d.bookingID)
                .HasConstraintName("FK__PaymentIn__booki__3F115E1A");

            entity.HasOne(d => d.business).WithMany(p => p.PaymentInfos)
                .HasForeignKey(d => d.business_ID)
                .HasConstraintName("FK__PaymentIn__busin__3587F3E0");

            entity.HasOne(d => d.keeper).WithMany(p => p.PaymentInfos)
                .HasForeignKey(d => d.keeper_ID)
                .HasConstraintName("FK__PaymentIn__keepe__3E1D39E1");
        });

        modelBuilder.Entity<Reserve>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__Reserve__3213E83F69B23087");

            entity.ToTable("Reserve");

            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.pet_name)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.service_name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.time).HasColumnType("datetime");

            entity.HasOne(d => d.business).WithMany(p => p.Reserve)
                .HasForeignKey(d => d.business_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Reserve__busines__540C7B00");

            entity.HasOne(d => d.keeper).WithMany(p => p.Reserve)
                .HasForeignKey(d => d.keeper_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Reserve__keeper___56E8E7AB");

            entity.HasOne(d => d.statusNavigation).WithMany(p => p.Reserve)
                .HasForeignKey(d => d.status)
                .HasConstraintName("FK__Reserve__status__55F4C372");
        });

        modelBuilder.Entity<Review>(entity =>
        {
            entity.HasKey(e => e.reviewID).HasName("PK__Review__2ECD6E24D1C121C1");

            entity.ToTable("Review");

            entity.Property(e => e.reviewDate).HasColumnType("datetime");
            entity.Property(e => e.reviewText).HasMaxLength(255);

            entity.HasOne(d => d.keeper).WithMany(p => p.Reviews)
                .HasForeignKey(d => d.keeper_ID)
                .HasConstraintName("FK__Review__keeper_I__3D2915A8");

            entity.HasOne(d => d.room).WithMany(p => p.Reviews)
                .HasForeignKey(d => d.roomID)
                .HasConstraintName("FK__Review__roomID__3C34F16F");
        });

        modelBuilder.Entity<Room>(entity =>
        {
            entity.HasKey(e => e.roomID).HasName("PK__Rooms__6C3BF5DE907102F1");

            entity.Property(e => e.roomDescrep).HasMaxLength(255);
            entity.Property(e => e.roomSpecies).HasMaxLength(10);

            entity.HasOne(d => d.FK_roomImg).WithMany(p => p.Rooms)
                .HasForeignKey(d => d.FK_roomImg_ID)
                .HasConstraintName("FK_roomImg_ID");

            entity.HasOne(d => d.FK_roomType).WithMany(p => p.Rooms)
                .HasForeignKey(d => d.FK_roomType_ID)
                .HasConstraintName("FK__Rooms__FK_roomTy__46B27FE2");

            entity.HasOne(d => d.hotel).WithMany(p => p.Rooms)
                .HasForeignKey(d => d.hotelID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Rooms__hotelID__367C1819");
        });

        modelBuilder.Entity<Service>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__Service__3213E83F78077119");

            entity.ToTable("Service");

            entity.Property(e => e.category)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.price)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.service_content)
                .IsRequired()
                .HasMaxLength(600);
            entity.Property(e => e.service_img).HasMaxLength(255);
            entity.Property(e => e.service_name)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.business).WithMany(p => p.Service)
                .HasForeignKey(d => d.business_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Service__busines__4A8310C6");
        });

        modelBuilder.Entity<article>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__article__3214EC275F300DFA");

            entity.ToTable("article");

            entity.Property(e => e.content).HasMaxLength(1024);
            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.parent_ID).HasDefaultValueSql("(NULL)");

            entity.HasOne(d => d.FK_Keeper).WithMany(p => p.articles)
                .HasForeignKey(d => d.FK_Keeper_ID)
                .HasConstraintName("FK__article__FK_Keep__625A9A57");

            entity.HasOne(d => d.parent).WithMany(p => p.Inverseparent)
                .HasForeignKey(d => d.parent_ID)
                .HasConstraintName("FK__article__parent___6442E2C9");
        });

        modelBuilder.Entity<biological_test>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__biologic__3213E83F69C8265A");

            entity.ToTable("biological_test");

            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.findings).HasMaxLength(300);

            entity.HasOne(d => d.pet).WithMany(p => p.biological_tests)
                .HasForeignKey(d => d.pet_id)
                .HasConstraintName("FK__biologica__pet_i__00200768");

            entity.HasOne(d => d.specimen).WithMany(p => p.biological_tests)
                .HasForeignKey(d => d.specimen_id)
                .HasConstraintName("FK__biologica__speci__02084FDA");
        });

        modelBuilder.Entity<business>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__business__3214EC270D38A083");

            entity.ToTable("business");

            entity.Property(e => e.address)
                .HasMaxLength(200)
                .HasDefaultValue("未填寫");
            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.email)
                .HasMaxLength(100)
                .HasDefaultValue("未填寫");
            entity.Property(e => e.geoJson).HasDefaultValue("未填寫");
            entity.Property(e => e.license_number)
                .HasMaxLength(50)
                .HasDefaultValue("未填寫");
            entity.Property(e => e.name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.password)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.phone)
                .HasMaxLength(30)
                .HasDefaultValue("未填寫");
            entity.Property(e => e.salt)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.business_statusNavigation).WithMany(p => p.businesses)
                .HasForeignKey(d => d.business_status)
                .HasConstraintName("FK__business__busine__48CFD27E");

            entity.HasOne(d => d.type).WithMany(p => p.businesses)
                .HasForeignKey(d => d.type_ID)
                .HasConstraintName("FK__business__type_I__4316F928");
        });

        modelBuilder.Entity<business_img>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__business__3214EC27BBF97667");

            entity.ToTable("business_img");

            entity.Property(e => e.URL).HasMaxLength(512);
            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.name)
                .HasMaxLength(256)
                .HasDefaultValueSql("(NULL)");

            entity.HasOne(d => d.img_type).WithMany(p => p.business_imgs)
                .HasForeignKey(d => d.img_type_id)
                .HasConstraintName("FK__business___img_t__5070F446");
        });

        modelBuilder.Entity<business_img_type>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__business__3214EC27C2B92D24");

            entity.ToTable("business_img_type");

            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.typename).HasMaxLength(512);

            entity.HasOne(d => d.FK_business).WithMany(p => p.business_img_types)
                .HasForeignKey(d => d.FK_business_id)
                .HasConstraintName("FK__business___FK_bu__4CA06362");
        });

        modelBuilder.Entity<business_type>(entity =>
        {
            entity.HasKey(e => e.business_type_ID).HasName("PK__business__2F9BFA518215E79B");

            entity.ToTable("business_type");

            entity.Property(e => e.business_type_name)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<daily_outpatient_clinic_schedule>(entity =>
        {
            entity.HasKey(e => e.daily_outpatient_clinic_schedule_ID).HasName("PK__daily_ou__A98BAD4ECBD66165");

            entity.ToTable("daily_outpatient_clinic_schedule");

            entity.Property(e => e.created_date).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.outpatient_clinic).WithMany(p => p.daily_outpatient_clinic_schedules)
                .HasForeignKey(d => d.outpatient_clinic_ID)
                .HasConstraintName("FK__daily_out__outpa__66603565");
        });

        modelBuilder.Entity<department>(entity =>
        {
            entity.HasKey(e => e.department_ID).HasName("PK__departme__C22220EA81F13BB2");

            entity.ToTable("department");

            entity.Property(e => e.department_name)
                .IsRequired()
                .HasMaxLength(20);

            entity.HasOne(d => d.business).WithMany(p => p.departments)
                .HasForeignKey(d => d.business_ID)
                .HasConstraintName("FK__departmen__busin__59063A47");
        });

        modelBuilder.Entity<dosage_form>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__dosage_f__3213E83FD417A183");

            entity.ToTable("dosage_form");

            entity.Property(e => e.form_name).HasMaxLength(10);
        });

        modelBuilder.Entity<frequency>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__frequenc__3213E83F26000BF8");

            entity.ToTable("frequency");

            entity.Property(e => e.frequency_name).HasMaxLength(5);
        });

        modelBuilder.Entity<hosp_history>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__hosp_his__3213E83F61E97116");

            entity.ToTable("hosp_history");

            entity.Property(e => e.admission_date).HasColumnType("datetime");
            entity.Property(e => e.discharge_date).HasColumnType("datetime");
            entity.Property(e => e.memo).HasMaxLength(200);

            entity.HasOne(d => d.medical_record).WithMany(p => p.hosp_histories)
                .HasForeignKey(d => d.medical_record_id)
                .HasConstraintName("FK__hosp_hist__medic__2739D489");

            entity.HasOne(d => d.nursing_record).WithMany(p => p.hosp_histories)
                .HasForeignKey(d => d.nursing_record_id)
                .HasConstraintName("FK__hosp_hist__nursi__282DF8C2");

            entity.HasOne(d => d.ward).WithMany(p => p.hosp_histories)
                .HasForeignKey(d => d.ward_id)
                .HasConstraintName("FK__hosp_hist__ward___29221CFB");
        });

        modelBuilder.Entity<image_file>(entity =>
        {
            entity.HasKey(e => e.image_id).HasName("PK__image_fi__DC9AC95528A56432");

            entity.Property(e => e.file_path)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.uploaded_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.record_type).WithMany(p => p.image_files)
                .HasForeignKey(d => d.record_type_id)
                .HasConstraintName("FK__image_fil__recor__75A278F5");
        });

        modelBuilder.Entity<keeper>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__keeper__3214EC275797F623");

            entity.ToTable("keeper");

            entity.Property(e => e.address).HasMaxLength(200);
            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.password)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.phone).HasMaxLength(15);
            entity.Property(e => e.salt)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.statusNavigation).WithMany(p => p.keepers)
                .HasForeignKey(d => d.status)
                .HasConstraintName("FK__keeper__status__286302EC");
        });

        modelBuilder.Entity<keeper_img>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__keeper_i__3214EC27CFBF0ABC");

            entity.ToTable("keeper_img");

            entity.Property(e => e.URL).HasMaxLength(512);
            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.name)
                .HasMaxLength(256)
                .HasDefaultValueSql("(NULL)");

            entity.HasOne(d => d.img_type).WithMany(p => p.keeper_imgs)
                .HasForeignKey(d => d.img_type_id)
                .HasConstraintName("FK__keeper_im__img_t__300424B4");
        });

        modelBuilder.Entity<keeper_img_type>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__keeper_i__3214EC2772EE8F16");

            entity.ToTable("keeper_img_type");

            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.typename).HasMaxLength(512);

            entity.HasOne(d => d.FK_Keeper).WithMany(p => p.keeper_img_types)
                .HasForeignKey(d => d.FK_Keeper_id)
                .HasConstraintName("FK__keeper_im__FK_Ke__2C3393D0");
        });

        modelBuilder.Entity<medical_imaging>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__medical___3213E83F001CAE59");

            entity.ToTable("medical_imaging");

            entity.Property(e => e.examined_area).HasMaxLength(50);
            entity.Property(e => e.examined_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.findings).HasMaxLength(300);
            entity.Property(e => e.type).HasMaxLength(50);

            entity.HasOne(d => d.pet).WithMany(p => p.medical_imagings)
                .HasForeignKey(d => d.pet_id)
                .HasConstraintName("FK__medical_i__pet_i__797309D9");
        });

        modelBuilder.Entity<medical_record>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__medical___3213E83FD847DC00");

            entity.ToTable("medical_record");

            entity.Property(e => e.admission_process)
                .IsRequired()
                .HasMaxLength(500);
            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.diagnosis)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.memo).HasMaxLength(200);
            entity.Property(e => e.treatment)
                .IsRequired()
                .HasMaxLength(500);
            entity.Property(e => e.weight).HasColumnType("decimal(5, 2)");

            entity.HasOne(d => d.keeper).WithMany(p => p.medical_records)
                .HasForeignKey(d => d.keeper_id)
                .HasConstraintName("FK__medical_r__keepe__09A971A2");

            entity.HasOne(d => d.outpatient_clinic).WithMany(p => p.medical_records)
                .HasForeignKey(d => d.outpatient_clinic_id)
                .HasConstraintName("FK__medical_r__outpa__0C85DE4D");

            entity.HasOne(d => d.pet).WithMany(p => p.medical_records)
                .HasForeignKey(d => d.pet_id)
                .HasConstraintName("FK__medical_r__pet_i__0A9D95DB");

            entity.HasOne(d => d.vital_sign_record).WithMany(p => p.medical_records)
                .HasForeignKey(d => d.vital_sign_record_id)
                .HasConstraintName("FK__medical_r__vital__0D7A0286");
        });

        modelBuilder.Entity<medicine>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__medicine__3213E83F01E7E01F");

            entity.ToTable("medicine");

            entity.Property(e => e.brand_name).HasMaxLength(50);
            entity.Property(e => e.generic_name).HasMaxLength(50);
            entity.Property(e => e.indication).HasMaxLength(200);
            entity.Property(e => e.route).HasMaxLength(50);
            entity.Property(e => e.side_effects).HasMaxLength(200);
            entity.Property(e => e.timing).HasMaxLength(10);
        });

        modelBuilder.Entity<medicine_order_record>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__medicine__3213E83F9BF135C8");

            entity.ToTable("medicine_order_record");

            entity.Property(e => e.dosage).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.order_datetime).HasColumnType("datetime");
            entity.Property(e => e.route)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.start_datetime).HasColumnType("datetime");

            entity.HasOne(d => d.dosage_formNavigation).WithMany(p => p.medicine_order_records)
                .HasForeignKey(d => d.dosage_form)
                .HasConstraintName("FK__medicine___dosag__1AD3FDA4");

            entity.HasOne(d => d.frequency).WithMany(p => p.medicine_order_records)
                .HasForeignKey(d => d.frequency_id)
                .HasConstraintName("FK__medicine___frequ__19DFD96B");

            entity.HasOne(d => d.medicine).WithMany(p => p.medicine_order_records)
                .HasForeignKey(d => d.medicine_id)
                .HasConstraintName("FK__medicine___medic__18EBB532");

            entity.HasOne(d => d.order_status).WithMany(p => p.medicine_order_records)
                .HasForeignKey(d => d.order_status_id)
                .HasConstraintName("FK__medicine___order__1BC821DD");

            entity.HasOne(d => d.pet).WithMany(p => p.medicine_order_records)
                .HasForeignKey(d => d.pet_id)
                .HasConstraintName("FK__medicine___pet_i__17F790F9");
        });

        modelBuilder.Entity<medicine_order_status>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__medicine__3213E83FDBA14184");

            entity.ToTable("medicine_order_status");

            entity.Property(e => e.status_name).HasMaxLength(10);
        });

        modelBuilder.Entity<member_status>(entity =>
        {
            entity.HasKey(e => e.member_status_ID).HasName("PK__member_s__819644FE88D40A72");

            entity.ToTable("member_status");

            entity.Property(e => e.status_name)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<memo>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__memo__3214EC27A5AF849F");

            entity.ToTable("memo");

            entity.Property(e => e.content).HasMaxLength(1000);

            entity.HasOne(d => d.FK_keeper).WithMany(p => p.memos)
                .HasForeignKey(d => d.FK_keeper_ID)
                .HasConstraintName("FK__memo__FK_keeper___5535A963");

            entity.HasOne(d => d.business).WithMany(p => p.memos)
                .HasForeignKey(d => d.business_ID)
                .HasConstraintName("FK__memo__business_I__5629CD9C");
        });

        modelBuilder.Entity<nursing_record>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__nursing___3213E83F3E94EC35");

            entity.ToTable("nursing_record");

            entity.Property(e => e.datetime).HasColumnType("datetime");
            entity.Property(e => e.memo).HasMaxLength(200);
            entity.Property(e => e.weight).HasColumnType("decimal(5, 2)");

            entity.HasOne(d => d.pet).WithMany(p => p.nursing_records)
                .HasForeignKey(d => d.pet_id)
                .HasConstraintName("FK__nursing_r__pet_i__236943A5");

            entity.HasOne(d => d.vital_sign_record).WithMany(p => p.nursing_records)
                .HasForeignKey(d => d.vital_sign_record_id)
                .HasConstraintName("FK__nursing_r__vital__245D67DE");
        });

        modelBuilder.Entity<order_status>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__order_st__3214EC276ECD4FD7");

            entity.ToTable("order_status");

            entity.Property(e => e.status_name)
                .IsRequired()
                .HasMaxLength(20);

            entity.HasOne(d => d.FK_businessType).WithMany(p => p.order_statusFK_businessTypes)
                .HasForeignKey(d => d.FK_businessType_ID)
                .HasConstraintName("FK_businessType_ID");

            entity.HasOne(d => d.business_type).WithMany(p => p.order_statusbusiness_types)
                .HasForeignKey(d => d.business_type_ID)
                .HasConstraintName("FK__order_sta__busin__403A8C7D");
        });

        modelBuilder.Entity<outpatient_clinic>(entity =>
        {
            entity.HasKey(e => e.outpatient_clinic_ID).HasName("PK__outpatie__6AA2EF94FD46D641");

            entity.ToTable("outpatient_clinic");

            entity.Property(e => e.dayofweek).HasMaxLength(20);
            entity.Property(e => e.outpatient_clinic_name)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.outpatient_clinic_timeslot).WithMany(p => p.outpatient_clinics)
                .HasForeignKey(d => d.outpatient_clinic_timeslot_ID)
                .HasConstraintName("FK__outpatien__outpa__628FA481");

            entity.HasOne(d => d.vet).WithMany(p => p.outpatient_clinics)
                .HasForeignKey(d => d.vet_ID)
                .HasConstraintName("FK__outpatien__vet_I__6383C8BA");
        });

        modelBuilder.Entity<outpatient_clinic_timeslot>(entity =>
        {
            entity.HasKey(e => e.outpatient_clinic_timeslot_ID).HasName("PK__outpatie__C88688B93A1043C9");

            entity.ToTable("outpatient_clinic_timeslot");

            entity.Property(e => e.outpatient_clinic_timeslot_name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<person_tag>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__person_t__3214EC27D448B697");

            entity.Property(e => e.name).HasMaxLength(128);

            entity.HasOne(d => d.FK_Keeper).WithMany(p => p.person_tags)
                .HasForeignKey(d => d.FK_Keeper_ID)
                .HasConstraintName("FK__person_ta__FK_Ke__6DCC4D03");
        });

        modelBuilder.Entity<pet>(entity =>
        {
            entity.HasKey(e => e.pet_ID).HasName("PK__pet__3913D1663DF29AD3");

            entity.ToTable("pet");

            entity.Property(e => e.allergy)
                .HasMaxLength(200)
                .HasDefaultValue("無過敏記錄");
            entity.Property(e => e.chip_ID)
                .HasMaxLength(50)
                .HasDefaultValue("無晶片");
            entity.Property(e => e.chronic_dis)
                .HasMaxLength(200)
                .HasDefaultValue("無慢性病史");
            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.memo)
                .HasMaxLength(200)
                .HasDefaultValue("無備註");
            entity.Property(e => e.name).HasMaxLength(100);
            entity.Property(e => e.pet_weight).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.vaccine)
                .HasMaxLength(100)
                .HasDefaultValue("無疫苗施打紀錄");

            entity.HasOne(d => d.keeper).WithMany(p => p.pets)
                .HasForeignKey(d => d.keeper_ID)
                .HasConstraintName("FK__pet__keeper_ID__35BCFE0A");

            entity.HasOne(d => d.pet_type).WithMany(p => p.pets)
                .HasForeignKey(d => d.pet_type_ID)
                .HasConstraintName("FK__pet__pet_type_ID__34C8D9D1");
        });

        modelBuilder.Entity<pet_type>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__pet_type__3214EC27352A419C");

            entity.ToTable("pet_type");

            entity.Property(e => e.breed)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.species)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<record_type>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__record_t__3213E83F290BED3E");

            entity.ToTable("record_type");

            entity.Property(e => e.name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<roomType>(entity =>
        {
            entity.HasKey(e => e.roomType_ID).HasName("PK__roomType__28045B882E099BFB");

            entity.ToTable("roomType");

            entity.Property(e => e.roomType1)
                .HasMaxLength(30)
                .HasColumnName("roomType");

            entity.HasOne(d => d.FK_business).WithMany(p => p.roomTypes)
                .HasForeignKey(d => d.FK_businessID)
                .HasConstraintName("FK__roomType__FK_bus__45BE5BA9");
        });

        modelBuilder.Entity<speciman>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__specimen__3213E83F2D3DB5DB");

            entity.Property(e => e.normal_range_max).HasColumnType("decimal(7, 3)");
            entity.Property(e => e.normal_range_min).HasColumnType("decimal(7, 3)");
            entity.Property(e => e.specimen_name).HasMaxLength(50);
            entity.Property(e => e.test_name).HasMaxLength(50);

            entity.HasOne(d => d.pet_typeNavigation).WithMany(p => p.specimen)
                .HasForeignKey(d => d.pet_type)
                .HasConstraintName("FK__specimen__pet_ty__7D439ABD");
        });

        modelBuilder.Entity<surgery>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__surgery__3213E83F5D4627D3");

            entity.ToTable("surgery");

            entity.Property(e => e.anesthesia_duration).HasMaxLength(10);
            entity.Property(e => e.findings).HasMaxLength(300);
            entity.Property(e => e.op_duration).HasMaxLength(10);
            entity.Property(e => e.start_time).HasColumnType("datetime");
            entity.Property(e => e.technique).HasMaxLength(100);

            entity.HasOne(d => d.medical_record).WithMany(p => p.surgeries)
                .HasForeignKey(d => d.medical_record_id)
                .HasConstraintName("FK__surgery__medical__1EA48E88");

            entity.HasOne(d => d.medicine_order_recordNavigation).WithMany(p => p.surgeries)
                .HasForeignKey(d => d.medicine_order_record)
                .HasConstraintName("FK__surgery__medicin__1F98B2C1");

            entity.HasOne(d => d.vital_sign_record).WithMany(p => p.surgeries)
                .HasForeignKey(d => d.vital_sign_record_id)
                .HasConstraintName("FK__surgery__vital_s__208CD6FA");
        });

        modelBuilder.Entity<tag>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__tags__3214EC274FD689BA");

            entity.Property(e => e.name).HasMaxLength(128);
        });

        modelBuilder.Entity<using_person_tag>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__using_pe__3214EC277CDA3B6B");

            entity.HasOne(d => d.FK_Keeper).WithMany(p => p.using_person_tags)
                .HasForeignKey(d => d.FK_Keeper_ID)
                .HasConstraintName("FK__using_per__FK_Ke__70A8B9AE");

            entity.HasOne(d => d.FK_article).WithMany(p => p.using_person_tags)
                .HasForeignKey(d => d.FK_article_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__using_per__FK_ar__719CDDE7");

            entity.HasOne(d => d.FK_person_tags).WithMany(p => p.using_person_tags)
                .HasForeignKey(d => d.FK_person_tags_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__using_per__FK_pe__72910220");
        });

        modelBuilder.Entity<using_tag>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__using_ta__3214EC27AE6DC476");

            entity.HasOne(d => d.FK_article).WithMany(p => p.using_tags)
                .HasForeignKey(d => d.FK_article_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__using_tag__FK_ar__69FBBC1F");

            entity.HasOne(d => d.FK_tags).WithMany(p => p.using_tags)
                .HasForeignKey(d => d.FK_tags_ID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__using_tag__FK_ta__6AEFE058");
        });

        modelBuilder.Entity<vet_information>(entity =>
        {
            entity.HasKey(e => e.vet_ID).HasName("PK__vet_info__D816DB2B271BA311");

            entity.Property(e => e.license_number).HasMaxLength(50);
            entity.Property(e => e.profile).HasMaxLength(500);
            entity.Property(e => e.vet_name).HasMaxLength(100);

            entity.HasOne(d => d.business).WithMany(p => p.vet_informations)
                .HasForeignKey(d => d.business_ID)
                .HasConstraintName("FK__vet_infor__busin__5BE2A6F2");

            entity.HasOne(d => d.business_img).WithMany(p => p.vet_informations)
                .HasForeignKey(d => d.business_img_ID)
                .HasConstraintName("FK__vet_infor__busin__5DCAEF64");

            entity.HasOne(d => d.department).WithMany(p => p.vet_informations)
                .HasForeignKey(d => d.department_ID)
                .HasConstraintName("FK__vet_infor__depar__5CD6CB2B");
        });

        modelBuilder.Entity<vital_sign_record>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__vital_si__3213E83F5E587023");

            entity.ToTable("vital_sign_record");

            entity.Property(e => e.BT).HasColumnType("decimal(3, 1)");
            entity.Property(e => e.created_at)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.memo)
                .IsRequired()
                .HasMaxLength(30)
                .HasDefaultValue("nil");

            entity.HasOne(d => d.pet).WithMany(p => p.vital_sign_records)
                .HasForeignKey(d => d.pet_id)
                .HasConstraintName("FK__vital_sig__pet_i__04E4BC85");
        });

        modelBuilder.Entity<ward>(entity =>
        {
            entity.HasKey(e => e.ward_ID).HasName("PK__ward__396CB5D5D083DE4D");

            entity.ToTable("ward");

            entity.Property(e => e.memo).HasMaxLength(100);
            entity.Property(e => e.ward_name).HasMaxLength(100);

            entity.HasOne(d => d.business).WithMany(p => p.wards)
                .HasForeignKey(d => d.business_ID)
                .HasConstraintName("FK__ward__business_I__6A30C649");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}