// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace HotelAPI.Models;

public partial class TailstaleContext : DbContext
{
    public TailstaleContext(DbContextOptions<TailstaleContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Booking> Bookings { get; set; }

    public virtual DbSet<BookingDetail> BookingDetails { get; set; }

    public virtual DbSet<Business> Businesses { get; set; }

    public virtual DbSet<BusinessHour> BusinessHours { get; set; }

    public virtual DbSet<BusinessImg> BusinessImgs { get; set; }

    public virtual DbSet<BusinessImgType> BusinessImgTypes { get; set; }

    public virtual DbSet<BusinessType> BusinessTypes { get; set; }

    public virtual DbSet<CheckinDetail> CheckinDetails { get; set; }

    public virtual DbSet<Keeper> Keepers { get; set; }

    public virtual DbSet<KeeperImg> KeeperImgs { get; set; }

    public virtual DbSet<KeeperImgType> KeeperImgTypes { get; set; }

    public virtual DbSet<OrderStatus> OrderStatuses { get; set; }

    public virtual DbSet<PaymentInfo> PaymentInfos { get; set; }

    public virtual DbSet<Review> Reviews { get; set; }

    public virtual DbSet<Room> Rooms { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Booking>(entity =>
        {
            entity.HasKey(e => e.BookingId).HasName("PK__Booking__C6D03BED0A0DCEB4");

            entity.ToTable("Booking");

            entity.Property(e => e.BookingId).HasColumnName("bookingID");
            entity.Property(e => e.BookingAmountTotal).HasColumnName("bookingAmountTotal");
            entity.Property(e => e.BookingDate)
                .HasColumnType("datetime")
                .HasColumnName("bookingDate");
            entity.Property(e => e.BookingStatus)
                .HasMaxLength(10)
                .HasColumnName("bookingStatus");
            entity.Property(e => e.CheckinDate)
                .HasColumnType("datetime")
                .HasColumnName("checkinDate");
            entity.Property(e => e.CheckoutDate)
                .HasColumnType("datetime")
                .HasColumnName("checkoutDate");
            entity.Property(e => e.HotelId).HasColumnName("hotelID");
            entity.Property(e => e.KeeperId).HasColumnName("keeper_ID");

            entity.HasOne(d => d.Hotel).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.HotelId)
                .HasConstraintName("FK__Booking__hotelID__1332DBDC");

            entity.HasOne(d => d.Keeper).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.KeeperId)
                .HasConstraintName("FK__Booking__keeper___14270015");
        });

        modelBuilder.Entity<BookingDetail>(entity =>
        {
            entity.HasKey(e => e.BdId).HasName("PK__BookingD__4E75390F72306C88");

            entity.Property(e => e.BdId).HasColumnName("bdID");
            entity.Property(e => e.BdAmount).HasColumnName("bdAmount");
            entity.Property(e => e.BdTotal).HasColumnName("bdTotal");
            entity.Property(e => e.BookingId).HasColumnName("bookingID");
            entity.Property(e => e.RoomId).HasColumnName("roomID");

            entity.HasOne(d => d.Booking).WithMany(p => p.BookingDetails)
                .HasForeignKey(d => d.BookingId)
                .HasConstraintName("FK__BookingDe__booki__160F4887");

            entity.HasOne(d => d.Room).WithMany(p => p.BookingDetails)
                .HasForeignKey(d => d.RoomId)
                .HasConstraintName("FK__BookingDe__roomI__151B244E");
        });

        modelBuilder.Entity<Business>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__business__3214EC27F475DEA8");

            entity.ToTable("business");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(200)
                .HasDefaultValue("???")
                .HasColumnName("address");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("created_at");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasDefaultValue("???")
                .HasColumnName("email");
            entity.Property(e => e.FkStatusId).HasColumnName("FK_status_ID");
            entity.Property(e => e.GeoJson)
                .HasDefaultValue("???")
                .HasColumnName("geoJson");
            entity.Property(e => e.LicenseNumber)
                .HasMaxLength(50)
                .HasDefaultValue("???")
                .HasColumnName("license_number");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("name");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("password");
            entity.Property(e => e.Phone)
                .HasMaxLength(30)
                .HasDefaultValue("???")
                .HasColumnName("phone");
            entity.Property(e => e.PhotoUrl)
                .HasMaxLength(200)
                .HasColumnName("photo_url");
            entity.Property(e => e.TypeId).HasColumnName("type_ID");

            entity.HasOne(d => d.Type).WithMany(p => p.Businesses)
                .HasForeignKey(d => d.TypeId)
                .HasConstraintName("FK__business__type_I__398D8EEE");
        });

        modelBuilder.Entity<BusinessHour>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Business__3213E83F3C1A26EC");

            entity.ToTable("Business_hours");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.BusinessDay).HasColumnName("business_day");
            entity.Property(e => e.BusinessId).HasColumnName("business_ID");
            entity.Property(e => e.PeopleLimit)
                .HasDefaultValue(2)
                .HasColumnName("people_limit");

            entity.HasOne(d => d.Business).WithMany(p => p.BusinessHours)
                .HasForeignKey(d => d.BusinessId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Business___busin__22751F6C");
        });

        modelBuilder.Entity<BusinessImg>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__business__3214EC279F037EA7");

            entity.ToTable("business_img");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("created_at");
            entity.Property(e => e.ImgTypeId).HasColumnName("img_type_id");
            entity.Property(e => e.Name)
                .HasMaxLength(256)
                .HasDefaultValueSql("(NULL)")
                .HasColumnName("name");
            entity.Property(e => e.Url)
                .HasMaxLength(512)
                .HasColumnName("URL");

            entity.HasOne(d => d.ImgType).WithMany(p => p.BusinessImgs)
                .HasForeignKey(d => d.ImgTypeId)
                .HasConstraintName("FK__business___img_t__5E8A0973");
        });

        modelBuilder.Entity<BusinessImgType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__business__3214EC27F8956685");

            entity.ToTable("business_img_type");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("created_at");
            entity.Property(e => e.FkBusinessId).HasColumnName("FK_business_id");
            entity.Property(e => e.Typename)
                .HasMaxLength(512)
                .HasColumnName("typename");

            entity.HasOne(d => d.FkBusiness).WithMany(p => p.BusinessImgTypes)
                .HasForeignKey(d => d.FkBusinessId)
                .HasConstraintName("FK__business___FK_bu__5AB9788F");
        });

        modelBuilder.Entity<BusinessType>(entity =>
        {
            entity.HasKey(e => e.BusinessTypeId).HasName("PK__business__2F9BFA5173791B5E");

            entity.ToTable("business_type");

            entity.Property(e => e.BusinessTypeId).HasColumnName("business_type_ID");
            entity.Property(e => e.BusinessTypeName)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("business_type_name");
        });

        modelBuilder.Entity<CheckinDetail>(entity =>
        {
            entity.HasKey(e => e.CheckinId).HasName("PK__CheckinD__CF1A6A417A8D371A");

            entity.Property(e => e.CheckinId).HasColumnName("checkinID");
            entity.Property(e => e.BookingId).HasColumnName("bookingID");
            entity.Property(e => e.PetId).HasColumnName("pet_ID");
            entity.Property(e => e.RoomId).HasColumnName("roomID");

            entity.HasOne(d => d.Booking).WithMany(p => p.CheckinDetails)
                .HasForeignKey(d => d.BookingId)
                .HasConstraintName("FK__CheckinDe__booki__1AD3FDA4");

            entity.HasOne(d => d.Room).WithMany(p => p.CheckinDetails)
                .HasForeignKey(d => d.RoomId)
                .HasConstraintName("FK__CheckinDe__roomI__1BC821DD");
        });

        modelBuilder.Entity<Keeper>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__keeper__3214EC27BF12BA4B");

            entity.ToTable("keeper");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("address");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("created_at");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("email");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("name");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("password");
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(15)
                .HasColumnName("phone");
            entity.Property(e => e.Status).HasColumnName("status");
        });

        modelBuilder.Entity<KeeperImg>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__keeper_i__3214EC27D85AE2DB");

            entity.ToTable("keeper_img");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("created_at");
            entity.Property(e => e.ImgTypeId).HasColumnName("img_type_id");
            entity.Property(e => e.Name)
                .HasMaxLength(256)
                .HasDefaultValueSql("(NULL)")
                .HasColumnName("name");
            entity.Property(e => e.Url)
                .HasMaxLength(512)
                .HasColumnName("URL");

            entity.HasOne(d => d.ImgType).WithMany(p => p.KeeperImgs)
                .HasForeignKey(d => d.ImgTypeId)
                .HasConstraintName("FK__keeper_im__img_t__55F4C372");
        });

        modelBuilder.Entity<KeeperImgType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__keeper_i__3214EC2769090E55");

            entity.ToTable("keeper_img_type");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("created_at");
            entity.Property(e => e.FkKeeperId).HasColumnName("FK_Keeper_id");
            entity.Property(e => e.Typename)
                .HasMaxLength(512)
                .HasColumnName("typename");

            entity.HasOne(d => d.FkKeeper).WithMany(p => p.KeeperImgTypes)
                .HasForeignKey(d => d.FkKeeperId)
                .HasConstraintName("FK__keeper_im__FK_Ke__5224328E");
        });

        modelBuilder.Entity<OrderStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__order_st__3214EC27943F090A");

            entity.ToTable("order_status");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.StatusName)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("status_name");
        });

        modelBuilder.Entity<PaymentInfo>(entity =>
        {
            entity.HasKey(e => e.PaymentId).HasName("PK__PaymentI__A0D9EFA617665240");

            entity.ToTable("PaymentInfo");

            entity.Property(e => e.PaymentId).HasColumnName("paymentID");
            entity.Property(e => e.BookingId).HasColumnName("bookingID");
            entity.Property(e => e.BusinessId).HasColumnName("business_ID");
            entity.Property(e => e.CardNumber).HasColumnName("cardNumber");
            entity.Property(e => e.CardholderName)
                .HasMaxLength(20)
                .HasColumnName("cardholderName");
            entity.Property(e => e.CvvNumber).HasColumnName("cvvNumber");
            entity.Property(e => e.ExpirationDate).HasColumnName("expirationDate");
            entity.Property(e => e.KeeperId).HasColumnName("keeper_ID");
            entity.Property(e => e.PaymentAmount).HasColumnName("paymentAmount");
            entity.Property(e => e.PaymentStatus)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("paymentStatus");
            entity.Property(e => e.PaymentTimestamp)
                .HasColumnType("datetime")
                .HasColumnName("paymentTimestamp");

            entity.HasOne(d => d.Booking).WithMany(p => p.PaymentInfos)
                .HasForeignKey(d => d.BookingId)
                .HasConstraintName("FK__PaymentIn__booki__19DFD96B");

            entity.HasOne(d => d.Business).WithMany(p => p.PaymentInfos)
                .HasForeignKey(d => d.BusinessId)
                .HasConstraintName("FK__PaymentIn__busin__114A936A");

            entity.HasOne(d => d.Keeper).WithMany(p => p.PaymentInfos)
                .HasForeignKey(d => d.KeeperId)
                .HasConstraintName("FK__PaymentIn__keepe__18EBB532");
        });

        modelBuilder.Entity<Review>(entity =>
        {
            entity.HasKey(e => e.ReviewId).HasName("PK__Review__2ECD6E245663A474");

            entity.ToTable("Review");

            entity.Property(e => e.ReviewId).HasColumnName("reviewID");
            entity.Property(e => e.KeeperId).HasColumnName("keeper_ID");
            entity.Property(e => e.ReviewDate)
                .HasColumnType("datetime")
                .HasColumnName("reviewDate");
            entity.Property(e => e.ReviewRating).HasColumnName("reviewRating");
            entity.Property(e => e.ReviewText)
                .HasMaxLength(255)
                .HasColumnName("reviewText");
            entity.Property(e => e.RoomId).HasColumnName("roomID");

            entity.HasOne(d => d.Keeper).WithMany(p => p.Reviews)
                .HasForeignKey(d => d.KeeperId)
                .HasConstraintName("FK__Review__keeper_I__17F790F9");

            entity.HasOne(d => d.Room).WithMany(p => p.Reviews)
                .HasForeignKey(d => d.RoomId)
                .HasConstraintName("FK__Review__roomID__17036CC0");
        });

        modelBuilder.Entity<Room>(entity =>
        {
            entity.HasKey(e => e.RoomId).HasName("PK__Rooms__6C3BF5DE3E520F80");

            entity.Property(e => e.RoomId).HasColumnName("roomID");
            entity.Property(e => e.HotelId).HasColumnName("hotelID");
            entity.Property(e => e.RoomDescrep)
                .HasMaxLength(255)
                .HasColumnName("roomDescrep");
            entity.Property(e => e.RoomDiscount).HasColumnName("roomDiscount");
            entity.Property(e => e.RoomPrice).HasColumnName("roomPrice");
            entity.Property(e => e.RoomReserve).HasColumnName("roomReserve");
            entity.Property(e => e.RoomSpecies)
                .HasMaxLength(10)
                .HasColumnName("roomSpecies");
            entity.Property(e => e.RoomType)
                .HasMaxLength(10)
                .HasColumnName("roomType");

            entity.HasOne(d => d.Hotel).WithMany(p => p.Rooms)
                .HasForeignKey(d => d.HotelId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Rooms__hotelID__123EB7A3");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}