@model Tailstale.Models.ReserveViewModel

@{
    ViewData["Title"] = "Create";
}
@section Styles {
    <link href="~/css/salonfrom.css" rel="stylesheet" />
}
<h1>Create</h1>

<h4>Reserve</h4>
<hr />
<div class="row" id="app">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="keeper_id" class="control-label"></label>
               @*  <select asp-for="keeper_id" class ="form-control" asp-items="ViewBag.keeper_id"></select> *@
                <input class="form-control" v-on:input="callID" v-model="keeper_Name"></input>
                <input asp-for="keeper_id" class="form-control" v-model="keeper_ID" readonly ></input>
                <span asp-validation-for="keeper_id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="pet_name" class="control-label"></label>
                @* <input asp-for="pet_name" class="form-control" /> *@
                <select asp-for="pet_name" class="form-control">
                    <option v-for="item in petName" :value="item.name">{{item.name}}</option>
               </select>
                <span asp-validation-for="pet_name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="business_ID" class="control-label"></label>
                <select asp-for="business_ID" class ="form-control" asp-items="ViewBag.business_ID"></select>
            </div>
            <div class="form-group">
                <label asp-for="time" class="control-label"></label>
                <input asp-for="time" class="form-control meeting-time" type="datetime-local" step="3600" />
                <span asp-validation-for="time" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="service_name" class="control-label"></label>
                <input asp-for="service_name" class="form-control" />
                <span asp-validation-for="service_name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="status" class="control-label"></label>
                <select asp-for="status" class="form-control" asp-items="ViewBag.Orderstatus_ID"></select>
                <span asp-validation-for="status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        var vueApp = {
            data() {
                return {
                    baseAddress: "https://localhost:7112",//結尾不要/
                    keeper_Name : "",
                    keeper_ID : null,
                    petName:[],

                };
            },
            mounted: function () {//初始化,發生呼叫函式,他需要用callback,
               


            },
            methods: {
                callID: function () {
                    let _this = this;
                    _this.petName = [];
                    if (!_this.keeper_Name.trim()) {
                        // 如果為空，不發送請求
                        _this.keeper_ID = null; // 或者其他適當的預設值
                        return;
                    }
                    axios.get(`${_this.baseAddress}/api/SalonApi/SelectKeeperId`, {
                        params: {
                            name: _this.keeper_Name // 將 keepname 作為查詢參數傳遞
                        }
                    }).then(response => {
                        _this.keeper_ID = response.data;
                         _this.callPet(_this.keeper_ID);
                    }).catch(err => {
                        alert(err);
                    });
                },
                callPet: function (id) {
                    let _this = this;
                    if (id == null || id === '') {
                        // 如果 id 無效，不發送請求,不然會莫名input每次輸入值就跑一次400
                        _this.petName = []; // 清空 petName
                        return;
                    }
                    
                    axios.get(`${_this.baseAddress}/api/SalonApi/SelectPetName`, {
                        params: {
                            keeperid: id // 將 keepname 作為查詢參數傳遞
                        }
                    }).then(response => {

                        _this.petName = response.data;

                    }).catch(err => {
                        alert(err);
                    });
                }
            },
            computed: {
                

            },
        };
        var app = Vue.createApp(vueApp).mount("#app");
        
        document.querySelector('.meeting-time').addEventListener('input', function () {
            var inputDate = new Date(this.value);
            inputDate.setMinutes(0);  // 将分钟部分设为 0
            this.value = inputDate.toISOString().slice(0, 16);  // 格式化为 yyyy-MM-ddTHH:mm
        });

       

        
    </script>

}
